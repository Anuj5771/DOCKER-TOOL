---
- name: Install Docker and required dependencies
  hosts: all
  become: yes
  tasks:

    # Add Docker GPG key (Debian)
    - name: Add Docker GPG key (Debian)
      apt_key:
        url: "{{ docker_gpg_key }}"
        state: present
      when: ansible_os_family == "Debian"

    # Add Docker repository (Debian)
    - name: Add Docker repository (Debian)
      apt_repository:
        repo: "{{ docker_repo }}"
        state: present
      when: ansible_os_family == "Debian"

    # Install Docker (Debian)
    - name: Install Docker (Debian)
      apt:
        update_cache: true
        name: docker-ce
        state: present
      when: ansible_os_family == "Debian"

    # Add Docker YUM repository (RedHat)
    - name: Add Docker YUM repository (RedHat)
      yum_repository:
        name: docker-ce
        baseurl: "{{ docker_baseurl }}"
        repo_gpgcheck: yes
        enabled: yes
        gpgcheck: yes
        gpgkey: "{{ docker_gpg_key }}"
        sslverify: yes
        sslcacert: /etc/pki/tls/certs/ca-bundle.crt
      when: ansible_os_family == "RedHat"

    # Install Docker (RedHat)
    - name: Install Docker (RedHat)
      yum:
        name: docker-ce
        state: present
      when: ansible_os_family == "RedHat"

    # Generate Docker daemon.json
    - name: Generate Docker daemon.json
      template:
        src: docker-daemon.json.j2
        dest: /etc/docker/daemon.json
      notify: restart docker
      when: ansible_os_family in ["Debian", "RedHat"]

    # Ensure Docker service is started and enabled
    - name: Ensure Docker service is started and enabled
      service:
        name: docker
        state: started
        enabled: yes
      when: ansible_os_family in ["Debian", "RedHat"]

    # Install Docker SDK for Python (required for Ansible to interact with Docker)
    - name: Install Docker SDK for Python
      pip:
        name: docker
        state: present
      when: ansible_os_family in ["Debian", "RedHat"]

    # Create and start an Nginx container
    - name: Create and start an Nginx container
      docker_container:
        name: nginx_container
        image: nginx:latest
        state: started  # Ensure the container is in the running state
        restart_policy: always  # Ensure the container restarts if it crashes
        ports:
          - "80:80"
        log_driver: "json-file"
        log_options:
          max-size: "10m"
          max-file: "3"
        container_default_behavior: "compatibility"  # Explicitly specify behavior here
      when: ansible_os_family in ["Debian", "RedHat"]

  handlers:
    - name: restart docker
      service:
        name: docker
        state: restarted
